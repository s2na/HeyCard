{"version":3,"sources":["Logo2.svg","Components/NavigationUser.js","Components/Navigation.js","routes/Home.js","Components/Sidebar.js","Components/Modal.js","routes/Myspace.js","routes/Signin.js","routes/Repository.js","App.js","index.js"],"names":["Navigation_User","user","logout","usertoken","username","activeStyle","color","className","src","Logo","alt","exact","to","onClick","token","fetch","method","headers","body","JSON","stringify","Navigation","Home","LeftbarPositioner","styled","div","LeftbarHeader","LeftbarBody","background","borderRadius","Sidebar","Modal","props","open","close","header","children","MakemainPositioner","Outputform","Outputlayer","Outputcorporate","Outputname","Outputposition","Outputphonenumber","Outputofficenumber","Outputemail","Outputaddress","Outputintroduceheader","label","Outputintroduce","Inputform","Cololselector","Colorbuttons","Infotitle","Infoinputs","Infoinputposition","Infoinput","input","Introduceinput","textarea","Myspace","useState","name","mail","corporate","position","phonenumber","officenumber","address","introduce","img","values","setValues","modalOpen","setModalOpen","handleChange","e","target","value","handleClick","console","log","id","style","backgroundColor","type","placeholder","onChange","domtoimage","toBlob","document","getElementById","then","blob","reader","FileReader","readAsDataURL","onloadend","base64data","result","Kakao","window","Signin","authenticated","login","gettoken","location","setUsername","setToken","useEffect","from","state","pathname","width","height","Auth","scope","success","authObj","access_token","API","request","url","res","email","kakao_account","profile","nickname","Repository","getContents","json","response","parse","App","setUser","setuserToken","NavigationUser","path","component","render","ReactDOM"],"mappings":"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","file":"static/js/main.14be6f63.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo2.79b8a6fb.svg\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Logo from \"../Logo2.svg\";\n\nfunction Navigation_User({user, logout, usertoken}) {\n \n\n  // Signin.js -> App.js에서 받아온 사용자 카카오 닉네임 {user}와 App.js에서 선언한 logout함수를 인자로 받아온다.\n  const {username} = user || {};\n  // Signin.js -> App.js에서 받아온 사용자 카카오 닉네임 {user}를 {username}을 선언하여 {username}에 값을 넣어 관리한다.\n  const activeStyle = {\n    color: \"#A259FF\",\n  };\n\n  const handleClick = () => {\n    const token = usertoken.token;\n    fetch('/api/auth/oauth/logout', {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        token: token,\n      })\n    })\n    logout()\n  }\n\n  return (\n    // Nav- Start\n    <div className=\"Nav\">\n      <img src={Logo} alt=\"로고\" className=\"nav-logo\"></img>\n      <div className=\"nav-item\">\n        <NavLink exact to=\"/\" activeStyle={activeStyle}>\n          HOME\n        </NavLink>\n        <NavLink to=\"/myspace\" activeStyle={activeStyle}>\n          MY SPACE\n        </NavLink>\n        <NavLink exact to=\"/\" onClick={handleClick}>\n          LOGOUT\n        </NavLink>\n          {username}\n      </div>\n    </div>\n    //    Nav-End\n  );\n}\n\nexport default Navigation_User;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Logo from \"../Logo2.svg\";\n\nfunction Navigation() {\n  const activeStyle = {\n    color: \"#A259FF\",\n  };\n\n  return (\n    // Nav- Start\n    <div className=\"Nav\">\n      <img src={Logo} alt=\"로고\" className=\"nav-logo\"></img>\n      <div className=\"nav-item\">\n        <NavLink exact to=\"/\" activeStyle={activeStyle}>\n          HOME\n        </NavLink>\n        <NavLink to=\"/signin\" activeStyle={activeStyle}>\n          LOGIN\n        </NavLink>\n      </div>\n    </div>\n    //    Nav-End\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Home() {\n  return (\n    <div className=\"Main\">\n      <div className=\"main-text\">\n        <p>지금 바로 </p>\n        <p>당신만의 명함을 만들어보세요!</p>\n      </div>\n      <Link to=\"/signin\" className=\"main-btn\">\n        GET STARTED!\n      </Link>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nconst LeftbarPositioner = styled.div`\n  width: 7rem;\n  height: 100vh;\n`;\n\nconst LeftbarHeader = styled.div`\n  text-align: center;\n  padding-bottom: 0.5rem;\n  border-bottom: solid black;\n  margin-top: 1rem;\n  color: #a259ff;\n`;\n\nconst LeftbarBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  margin-top: 1rem;\n  border-style: solid;\n`;\n\nconst activeStyle = {\n  background: \"#DBBEFF\",\n  borderRadius: \"7px\",\n};\n\nfunction Sidebar() {\n  return (\n    <LeftbarPositioner>\n      <LeftbarHeader>MY SPACE</LeftbarHeader>\n      <LeftbarBody>\n        <NavLink\n          exact\n          to=\"/myspace\"\n          activeStyle={activeStyle}\n          className=\"Sidebaritem\"\n        >\n          명함만들기\n        </NavLink>\n        <NavLink\n          to=\"/myspace/repository\"\n          activeStyle={activeStyle}\n          className=\"Sidebaritem\"\n        >\n          명함보관함\n        </NavLink>\n      </LeftbarBody>\n    </LeftbarPositioner>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\r\nimport \"../Modal.css\";\r\n\r\nconst Modal = (props) => {\r\n  const { open, close, header } = props;\r\n  // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴.\r\n  return (\r\n    //모달이 열릴때 openModal클래스가 생성된다.\r\n    <div className={open ? \"openModal modal\" : \"modal\"}>\r\n      {open ? (\r\n        <section>\r\n          <header>\r\n            {header}\r\n            <button className=\"close\" onClick={close}>\r\n              &times;\r\n            </button>\r\n          </header>\r\n          <main>{props.children}</main>\r\n          <footer>\r\n            <button className=\"close\" onClick={close}>\r\n              close\r\n            </button>\r\n          </footer>\r\n        </section>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Sidebar from \"../Components/Sidebar\";\nimport Axios from \"axios\";\nimport domtoimage from \"dom-to-image\";\nimport FileSaver, { saveAs } from \"file-saver\";\nimport Modal from \"../Components/Modal\";\n\n//명함 만들기 main 화면\nconst MakemainPositioner = styled.div`\n  display: flex;\n`;\n// 출력폼\nconst Outputform = styled.div`\n  display: flex;\n  width: 50%;\n  height: 100vh;\n  margin-top: 1rem;\n  justify-content: center;\n`;\n\nconst Outputlayer = styled.div`\n  display: flex;\n  width: 90%;\n  height: 90%;\n  border-style: solid;\n  border-radius: 20px;\n  font-family: \"Noto Sans KR\", sans-serif;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Outputcorporate = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  width: 90%;\n  height: 65px;\n  margin-top: 1rem;\n  border-bottom-style: solid;\n  font-size: 35px;\n`;\n\nconst Outputname = styled.div`\n  width: 90%;\n  height: 50px;\n  margin-top: 1rem;\n  font-size: 50px;\n`;\n\nconst Outputposition = styled.div`\n  width: 90%;\n  height: 50px;\n  margin-top: 1rem;\n  font-size: 30px;\n`;\n\nconst Outputphonenumber = styled.div`\n  width: 90%;\n  height: 35px;\n  margin-top: 1rem;\n  font-size: 20px;\n`;\n\nconst Outputofficenumber = styled.div`\n  width: 90%;\n  height: 35px;\n  margin-top: 1rem;\n  font-size: 20px;\n`;\n\nconst Outputemail = styled.div`\n  width: 90%;\n  height: 35px;\n  margin-top: 1rem;\n  font-size: 20px;\n`;\n\nconst Outputaddress = styled.div`\n  width: 90%;\n  height: 35px;\n  margin-top: 1rem;\n  font-size: 20px;\n`;\n\nconst Outputintroduceheader = styled.label`\n  width: 90%;\n  margin-top: 1rem;\n  font-size: 25px;\n  border-top-style: solid;\n  text-align: center;\n`;\n\nconst Outputintroduce = styled.div`\n  width: 90%;\n  margin-top: 1rem;\n  font-size: 20px;\n`;\n\n// 입력폼\nconst Inputform = styled.div`\n  width: 50%;\n  height: 100vh;\n  margin-top: 1rem;\n`;\n// 명함 컬러 선택하기\nconst Cololselector = styled.div`\n  display: flex;\n  justify-content: center;\n  font-size: 20px;\n  flex-wrap: wrap;\n`;\n\nconst Colorbuttons = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\n// 기본 정보 입력하기\nconst Infotitle = styled.div`\n  display: flex;\n  height: 40px;\n  justify-content: center;\n  font-size: 20px;\n  margin-top: 1rem;\n  flex-wrap: wrap;\n`;\n\nconst Infoinputs = styled.div`\n  display: flex;\n  align-items: flex-end;\n  flex-direction: column;\n`;\n\nconst Infoinputposition = styled.div``;\n\nconst Infoinput = styled.input`\n  width: 500px;\n  font-size: 15px;\n  margin-top: 0.5rem;\n  margin-left: 2rem;\n  margin-right: 8rem;\n  border-radius: 15px;\n`;\n\nconst Introduceinput = styled.textarea`\n  width: 500px;\n  height: 230px;\n  font-size: 15px;\n  margin-top: 1rem;\n  margin-left: 2rem;\n  margin-right: 8rem;\n  border-radius: 15px;\n`;\n\nfunction Myspace({ usertoken }) {\n  const { token } = usertoken || {}; // App.js에서 token값 가져오기\n\n  const [values, setValues] = useState({\n    token: token,\n    color: \"\",\n    name: \"\",\n    mail: \"\",\n    corporate: \"\",\n    position: \"\",\n    phonenumber: \"\",\n    officenumber: \"\",\n    address: \"\",\n    introduce: \"\",\n    img: \"\",\n  });\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const openModal = () => {\n    setModalOpen(true);\n  };\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n\n  const handleChange = (e) => {\n    // Basicinfo input eventhandle function\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const handleClick = (e) => {\n    // Colorselect button eventhandle function\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const submit = (e) => {\n    const { name } = e.target;\n    domtoimage\n      .toBlob(document.getElementById(\"outputimg\"))\n      .then(function (blob) {\n        let reader = new FileReader(); //캡쳐한 blob을 dataurl로 변환\n        reader.readAsDataURL(blob);\n        reader.onloadend = () => {\n          let base64data = reader.result;\n          setValues({ ...values, [name]: base64data });\n        };\n      });\n\n    // /api/insert로 json보내기\n    // Axios.post(\"http://localhost:3001/api/insert\", {\n    //   token: values.token,\n    //   color: values.color,\n    //   name: values.name,\n    //   mail: values.mail,\n    //   corporate: values.corporate,\n    //   position: values.position,\n    //   phonenumber: values.phonenumber,\n    //   officenumber: values.officenumber,\n    //   address: values.address,\n    //   introduce: values.introduce,\n    //   img: values.img,\n    // });\n  };\n  console.log(values);\n\n  return (\n    <MakemainPositioner>\n      <Sidebar />\n      <Outputform>\n        <Outputlayer id=\"outputimg\" style={{ backgroundColor: values.color }}>\n          <Outputcorporate>{values.corporate}</Outputcorporate>\n          <Outputname>{values.name}</Outputname>\n          <Outputposition>{values.position}</Outputposition>\n          <Outputphonenumber>{values.phonenumber}</Outputphonenumber>\n          <Outputofficenumber>{values.officenumber}</Outputofficenumber>\n          <Outputemail>{values.mail}</Outputemail>\n          <Outputaddress>{values.address}</Outputaddress>\n          <Outputintroduceheader>INTRODUCE</Outputintroduceheader>\n          <Outputintroduce>{values.introduce}</Outputintroduce>\n        </Outputlayer>\n      </Outputform>\n      <Inputform>\n        <Cololselector>\n          명함 컬러 선택하기\n          <Colorbuttons>\n            <button name=\"color\" value=\"red\" onClick={handleClick}>\n              빨강\n            </button>\n            <button name=\"color\" value=\"orange\" onClick={handleClick}>\n              주황\n            </button>\n            <button name=\"color\" value=\"yellow\" onClick={handleClick}>\n              노랑\n            </button>\n            <button name=\"color\" value=\"blue\" onClick={handleClick}>\n              파랑\n            </button>\n          </Colorbuttons>\n        </Cololselector>\n        <Infotitle>기본 정보 입력하기</Infotitle>\n        <Infoinputs>\n          <Infoinputposition>\n            <label>이름</label>\n            <Infoinput\n              type=\"text\"\n              name=\"name\"\n              value={values.name}\n              placeholder=\"   이름을 입력하세요\"\n              onChange={handleChange}\n            />\n          </Infoinputposition>\n          <Infoinputposition>\n            <lable>메일주소</lable>\n            <Infoinput\n              type=\"text\"\n              name=\"mail\"\n              value={values.mail}\n              placeholder=\"   e-mail을 입력하세요\"\n              onChange={handleChange}\n            />\n          </Infoinputposition>\n        </Infoinputs>\n        <Infotitle>추가 정보 입력하기</Infotitle>\n        <Infoinputs>\n          <Infoinputposition>\n            <label>회사명</label>\n            <Infoinput\n              type=\"text\"\n              name=\"corporate\"\n              value={values.corporate}\n              placeholder=\"   회사명을 입력하세요\"\n              onChange={handleChange}\n            />\n          </Infoinputposition>\n          <Infoinputposition>\n            <lable>직급</lable>\n            <Infoinput\n              type=\"text\"\n              name=\"position\"\n              value={values.position}\n              placeholder=\"   직급을 입력하세요\"\n              onChange={handleChange}\n            />\n          </Infoinputposition>\n          <Infoinputposition>\n            <lable>휴대폰번호</lable>\n            <Infoinput\n              type=\"text\"\n              name=\"phonenumber\"\n              value={values.phonenumber}\n              placeholder=\"   휴대폰번호를 입력하세요(010-XXXX-XXXX)\"\n              onChange={handleChange}\n            />\n          </Infoinputposition>\n          <Infoinputposition>\n            <lable>전화번호</lable>\n            <Infoinput\n              type=\"text\"\n              name=\"officenumber\"\n              value={values.officenumber}\n              placeholder=\"   전화번호를 입력하세요(02-XXX-XXXX)\"\n              onChange={handleChange}\n            />\n          </Infoinputposition>\n          <Infoinputposition>\n            <lable>주소</lable>\n            <Infoinput\n              type=\"text\"\n              name=\"address\"\n              value={values.address}\n              placeholder=\"   주소를 입력하세요\"\n              onChange={handleChange}\n            />\n          </Infoinputposition>\n          <Infoinputposition>\n            <lable>소개</lable>\n            <Introduceinput\n              type=\"text\"\n              name=\"introduce\"\n              value={values.introduce}\n              placeholder=\"   나를 설명할 수 있는 소개글을 작성해보세요\"\n              onChange={handleChange}\n            />\n          </Infoinputposition>\n          <Infoinputposition>\n            <button id=\"submitbtn\" name=\"img\" onClick={submit}>\n              버튼\n            </button>\n            <button onClick={openModal}>모달팝업</button>\n            {/* header 부분에 텍스트를 입력한다. */}\n            <Modal open={modalOpen} close={closeModal} header=\"Modal heading\">\n              {/* Modal.js <main> {props.children} </main>에 내용이 입력된다. */}\n              리액트 함수형 모달 팝업창입니다. 쉽게 만들 수 있어요. 같이\n              만들어봐요!\n            </Modal>\n          </Infoinputposition>\n        </Infoinputs>\n      </Inputform>\n    </MakemainPositioner>\n  );\n}\n\nexport default Myspace;","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../Logo2.svg\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst { Kakao } = window;\n\nfunction Signin({ authenticated, login, gettoken, location }) {\n  // authenticated(state: 로그인 인증), login(function: username state를 App.js로 넘겨줌)\n  const [username, setUsername] = useState(\"\");\n  const [token, setToken] = useState(\"\");\n  // 카카오 로그인 api에서 사용자 정보 중 nickname만 setUsername으로 빼내서 state 관리\n  const kakaoLoginClickHandler = () => {\n    //카카오 로그인 api\n    Kakao.Auth.login({\n      scope: \"profile, account_email, gender\",\n      success: function (authObj) {\n        //토큰\n        setToken(authObj.access_token);\n        \n        //console.log(authenticated);\n        Kakao.API.request({\n          url: \"/v2/user/me\",\n          success: (res) => {\n            // res.kakao_account (사용자 정보)\n\n            //console.log(authObj.access_token);\n            //console.log(res.kakao_account.email);\n            fetch('/api/auth/oauth', {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                  token: authObj.access_token,\n                  email: res.kakao_account.email,\n              })\n            })\n            \n           /*\n             axios.post('/api/auth/oauth', {\n              headers: {'Content-Type': 'application/json'},\n              body: JSON.stringify({\n                token: authObj.access_token,\n                email: res.kakao_account.profile.nickname,\n              })\n            \n            });\n            */\n            setUsername(res.kakao_account.profile.nickname);\n          }, // Kakao.API.request.success - end\n        }); // Kakao.API.request - end\n      }, // Kakao.Auth.login.success - end\n    }); // Kakao.Auth.login - end\n  }; // kakaoLoginClickHandler - end (카카오 로그인 api - end)\n  useEffect(() => {\n    //username state의 값이 변하게 되면 login({username})을 실행\n    return () => login({ username });\n  }, [username]);\n\n  useEffect(() => {\n    //token state의 값이 변하게 되면 gettoken({token})을 실행\n    return () => gettoken({ token });\n  }, [token]);\n\n  // authenticated(boolean: 사용자 로그인 여부)의 값이 true일이면 \"/\"위치(Home,js)로 이동\n\n  const { from } = location.state || { from: { pathname: \"/\" } };\n  if (authenticated) return <Redirect to={from} />;\n\n  \n  return (\n    <div className=\"Main-sign\">\n      <div className=\"sign-logo\">\n        <img src={Logo} alt=\"로고\" width=\"300px\" height=\"200px\" />\n      </div>\n\n      <div className=\"sign-text\">\n        <p> 지금 회원가입하시면 </p>\n        <p> 명함이 5초만에 뚝딱!</p>\n      </div>\n      <button className=\"sign-btn\" onClick={kakaoLoginClickHandler}>\n      </button>\n      <Link to=\"/signin\" className=\"sign-btn2\">\n        카카오 계정으로 <u>신규 가입하기</u>\n      </Link>\n    </div>\n  );\n}\n\nexport default Signin;","import React from \"react\";\nimport Sidebar from \"../Components/Sidebar\";\n\nfunction Repository() {\n\n  function getContents(){\n    return fetch('/api/contents/manageCard/select', {\n    method: 'POST',\n    headers: {\n        'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      name: '박준',   // 카카오톡 이메일을 가져와서 body에 실어 서버로 요청필요\n    })\n  })\n  .then(res => res.json())\n  .then(response => {\n    //console.log('Success:', JSON.stringify(response))\n    return JSON.stringify(response);\n\n  })\n  }\n  getContents().then(response => console.log(JSON.parse(response)));\n  getContents().then(response => console.log(JSON.parse(response)[0]));\n  getContents().then(response => console.log(JSON.parse(response)[0].mail));\n\n\n  return (\n    <div>\n     <Sidebar />\n     \n      Repository페이지\n    </div>\n  );\n}\n\nexport default Repository;","import React, { useState } from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport css from \"./App.css\";\n\nimport NavigationUser from \"./Components/NavigationUser\";\nimport Navigation from \"./Components/Navigation\";\nimport Home from \"./routes/Home\";\nimport Myspace from \"./routes/Myspace\";\nimport Signin from \"./routes/Signin\";\nimport Repository from \"./routes/Repository\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  // login({username})의 함수를 통해 Signin.js에서 username을 가져와 setUser을 통해 상태관리\n  const authenticated = user != null; // 사용자 로그인 인증\n\n  const [usertoken, setuserToken] = useState(null); //위와 같은 login으로 token값을 가져옴\n  const gettoken = ({ token }) => setuserToken({ token });\n\n  const login = ({ username }) => setUser({ username });\n  const logout = () => setUser(null);\n\n  return (\n    <>\n      <HashRouter>\n        {authenticated ? ( //사용자가 로그인 O\n          <NavigationUser user={user} logout={logout} /> //사용자의 카카오 닉네임을 받아온 user(state)와 logout함수를 인자로 보내준다.\n        ) : (\n          // 사용자가 로그인 X\n          <Navigation />\n        )}\n        <Route path=\"/\" exact={true} component={Home} /> {/* HOME 화면 */}\n        <Route\n          path=\"/myspace\"\n          exact={true}\n          render={(props) => <Myspace usertoken={usertoken} {...props} />}\n        />\n        {/* MY SPACE(명함만들기) 화면 */}\n        <Route path=\"/myspace/repository\" exact={true} component={Repository} />\n        {/* REPOSITORY(명함보관함) 화면 */}\n        <Route\n          path=\"/signin\"\n          render={(props) => (\n            <Signin\n              authenticated={authenticated}\n              login={login}\n              gettoken={gettoken}\n              {...props}\n            />\n          )} // Signin(로그인)을 렌더링할때 authenticated(사용자 로그인 여부)와 login(카카오 로그인 api에서 사용자 닉네임을 받아오기 위한 함수)를 인자로 보내준다.\n        />\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}